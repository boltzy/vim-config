§ ==========================================================
§  Comments
§
§  various templates are used by the plug-in, their names
§  should not be changed, but they can be edited to
§  customize the inserted code:
§  - the template "Comments.end-of-line-comment" is used by
§    the menu entry Perl -> Comments -> end-of-line comment,
§    it does not generate a menu entry
§  - the template "Comments.file description pl" is used as
§    a file header for files names "*.pl".
§  - the template "Comments.file description pm" is used as
§    a file header for files names "*.pm".
§  - the template "Comments.file description t" is used as
§    a file header for files names "*.t".
§  automatic insertion of the file headers can be prevented
§  by setting the configuration variable in your ".vimrc":
§    let g:Perl_InsertFileHeader = 'no'
§ ==========================================================

== Comments.end-of-line-comment == append, nomenu ==
# <CURSOR>
== Comments.frame == map:cfr, sc:f  ==
#-------------------------------------------------------------------------------
#  <CURSOR>
#-------------------------------------------------------------------------------
== Comments.function == map:cfu, sc:f  ==
#------------------------------------------------------------------------------
=head2 |?FUNCTION_NAME|

<CURSOR>{+FuntionDescription+}

=cut
sub |FUNCTION_NAME| {
  my $self = shift;
  my %arg = @_;

  return;
}

== Comments.method == map:cme, sc:m  ==
#------------------------------------------------------------------------------
=head2 |?METHODNAME|

<CURSOR>{+MethodDescription+}

=cut
sub |METHODNAME| {
  my $self = shift;
  my %args = @_;

  return;
}

== Comments.attribute == map:ca, sc:a  ==
#------------------------------------------------------------------------------
=head2 |?ATTRIBUTE_NAME|

<CURSOR>{+AttributeDescription+}

=cut
has |ATTRIBUTE_NAME| => ( is => 'ro', required => 1 );

== Comments.file description pl == map:chpl, sc:d, start, noindent ==
#!|PERL_INTERPRETER|
#===============================================================================
=head1 NAME

|FILENAME|

=head1 SYNOPSIS

{+Synopsis+}

=cut

use Modern::Perl;

#===============================================================================
__END__
#===============================================================================
=head1 VERSION INFORMATION

 $Source: $
 $Revision: $
 $Date: $
 $Author: $

=head1 COPYRIGHT AND LICENSE

Copyright (c) |YEAR| |COMPANY|, All rights reserved.

=cut

== Comments.file description pm == map:chpm, sc:d, start, noindent ==
#===============================================================================
=head1 NAME

|?CLASSNAME|

=head1 DESCRIPTION

{+ModuleDescription+}

=cut
#===============================================================================
package |CLASSNAME|;

use Modern::Perl;

use Pirum::Log;

use Pirum::Moo;
use namespace::clean;

extends qw ( {+ParentModule+} );

#===============================================================================
# Constants
#-------------------------------------------------------------------------------
Readonly::Scalar my $NAME => 'VALUE';

#===============================================================================
=head1 ATTRIBUTES

=cut
#-------------------------------------------------------------------------------

### attributes here

#===============================================================================
# PRIVATE METHODS
#===============================================================================

### private methods here

#===============================================================================
# PUBLIC METHODS
#===============================================================================
=head1 METHODS
=cut
#-------------------------------------------------------------------------------

### public methods here

#-------------------------------------------------------------------------------
1;
#===============================================================================
__END__
#===============================================================================
=head1 VERSION INFORMATION

 $Source: $
 $Revision: $
 $Date: $
 $Author: $

=head1 COPYRIGHT AND LICENSE

Copyright (c) |YEAR| |COMPANY|, All rights reserved.

=cut
 
== Comments.file description t == map:cht, sc:d, start, noindent ==
#!|PERL_INTERPRETER|
#===============================================================================
=head1 NAME

|FILENAME|

=head1 SYNOPSIS

{+Synopsis+}

=cut

use Modern::Perl;

use Test::More tests => 1;                      # last test to print

#-------------------------------------------------------------------------------



#===============================================================================
__END__
#===============================================================================
=head1 VERSION INFORMATION

 $Source: $
 $Revision: $
 $Date: $
 $Author: $

=head1 COPYRIGHT AND LICENSE

Copyright (c) |YEAR| |COMPANY|, All rights reserved.

=cut
== Comments.file description pod == map:chpo, sc:d, start ==
#
#===============================================================================
#
#         FILE: |FILENAME|
#
#  DESCRIPTION: <CURSOR>
#
#       AUTHOR: |AUTHOR| (|AUTHORREF|), <|EMAIL|>
# ORGANIZATION: |ORGANIZATION|
#      CREATED: |DATE|
#     REVISION: ---
#===============================================================================


== Comments.date == insert, sc:d ==
|DATE|<CURSOR>
== Comments.date+time == insert, sc:t ==
|DATE| |TIME|<CURSOR>
== ENDTEMPLATE ==

== LIST: comments_keywords == hash ==
  'BUG'         : ':BUG:|DATE| |TIME|:|AUTHORREF|:',
  'REMARK'      : ':REMARK:|DATE| |TIME|:|AUTHORREF|:',
  'TODO'        : ':TODO:|DATE| |TIME|:|AUTHORREF|:',
  'WARNING'     : ':WARNING:|DATE| |TIME|:|AUTHORREF|:',
  'WORKAROUND'  : ':WORKAROUND:|DATE| |TIME|:|AUTHORREF|:',
  'new keyword' : ':{+NEW_KEYWORD+}:|DATE| |TIME|:|AUTHORREF|:',
== LIST: comments_macros == hash ==
  'AUTHOR'       : '|AUTHOR|',
  'AUTHORREF'    : '|AUTHORREF|',
  'COMPANY'      : '|COMPANY|',
  'COPYRIGHT'    : '|COPYRIGHT|',
  'EMAIL'        : '|EMAIL|',
  'ORGANIZATION' : '|ORGANIZATION|',
== ENDLIST ==

== Comments.keyword comments == expandmenu, append, map:ck, sc:k ==
|PickList( 'keyword comment', 'comments_keywords' )|
 # |PICK| <CURSOR>
== Comments.macros == expandmenu, insert, map:cma, sc:m ==
|PickList( 'macro', 'comments_macros' )|
|PICK|<CURSOR>
== ENDTEMPLATE ==
